#!/usr/bin/env bash

# Download, then extract intermediate files out of the NCBI historical alignment files.

set -e

ncbi_dir=$1
working_dir=$2
log_dir=$3

if [ -z "$ncbi_dir" ] || [ -z "$working_dir" ] || [ -z "$log_dir" ]
then
    echo 'Usage: sbin/uta-extract-historical <ncbi_dir> <working_dir> <log_dir>'
    exit 1
fi

download_ncbi_file () {
    download_path=$1
    download_dir=$2

    download_module="${download_path%%/*}"
    download_source="ftp.ncbi.nlm.nih.gov::$download_path"
    download_destination="$download_dir/$download_module"

    mkdir -p $download_destination
    echo "Downloading $download_source to $download_destination"
    rsync --no-motd -DHPRprtv "$download_source" "$download_destination"
}

relative_path="refseq/H_sapiens/historical/GRCh38/GCF_000001405.40-RS_2023_03_historical"
prefix="GCF_000001405.40-RS_2023_03_historical"

# download historical genbank file
file_path="$relative_path/GCF_000001405.40-RS_2023_03_knownrefseq_rna.gbff.gz"
download_ncbi_file $file_path $ncbi_dir

#download historical gff file
file_path="$relative_path/GCF_000001405.40-RS_2023_03_knownrefseq_alns.gff.gz"
download_ncbi_file $file_path $ncbi_dir

# extract intermediate files from genbank file
python sbin/ncbi_extract_gbff.py "$ncbi_dir/$relative_path/GCF_000001405.40-RS_2023_03_knownrefseq_rna.gbff.gz" \
  --prefix "$prefix" --output_dir "$working_dir" 2>&1 | tee "$log_dir/ncbi-parse-historical-ggbb.log"

# extract exonset intermediate file from gff file
python sbin/ncbi_parse_genomic_gff.py "$ncbi_dir/$relative_path/GCF_000001405.40-RS_2023_03_knownrefseq_alns.gff.gz" | \
  gzip -c > "$working_dir/$prefix.exonsets.gz" 2>&1 | tee "$log_dir/ncbi-parse-historical-gff.log"
