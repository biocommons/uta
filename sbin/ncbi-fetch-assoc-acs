#!/usr/bin/env python

import csv
import fileinput
import logging
import os
import sys

import eutils.client
from eutils.exceptions import EutilsRequestError

logging.basicConfig(level=logging.WARN)
logger = logging.getLogger(__name__)

cols = ['hgnc','tx_ac','pro_ac','origin']

if __name__ == "__main__":
    ec = eutils.client.Client()

    o_flo = csv.DictWriter(f=sys.stdout, fieldnames=cols, delimiter=b'\t', lineterminator='\n')
    o_flo.writeheader()

    nerrors = 0

    for ac in fileinput.input():
        if nerrors > 100:
            raise Exception("Too many errors. You're hosed, man. Bailing.")

        ac = ac.strip()
        try:
            esr = ec.esearch(db='nuccore', term=ac)
        except EutilsRequestError:
            nerrors += 1
            logger.error(ac + " is a bad dude, and raised this:")
            logger.exception(e)
            continue
            
        assert esr.count == 1, "expected exactly 1 reply for "+ac

        for id in esr.ids:
            try:
                gbset = ec.efetch(db='nuccore', id=id)
                assert len(gbset.gbseqs) == 1, "expected exactly 1 reply for id="+id
                gbseq = gbset.gbseqs[0]
                cds_quals = gbseq.features.cds.qualifiers
                o_flo.writerow({
                    'hgnc': cds_quals['gene'],
                    'tx_ac': gbseq.acv,
                    'pro_ac': cds_quals['protein_id'],
                    'origin': 'NCBI',
                    })
            except Exception as e:
                nerrors += 1
                logger.error(ac + " is a bad dude, and raised this:")
                logger.exception(e)
